# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0
name: buildpush
on:
  push:
    branches:
      - main
    tags:
      - 'rollback*' # 监听以 rollback 开头的标签
  workflow_dispatch: # 支持手动触发
  
jobs:
  protobufcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate
        run: make clean docker-generate-protobuf
      - name: Check Clean Work Tree
        run: make check-clean-work-tree

  build_and_push_images:
    runs-on: ubuntu-latest
    needs: protobufcheck

    permissions:
      contents: read
      packages: write

    env:
      RELEASE_VERSION: "${{ github.event.release.tag_name }}"

    strategy:
      fail-fast: false
      matrix:
        file_tag:
          - file: ./src/accountingservice/Dockerfile
            tag_suffix: accountingservice
            context: ./
            setup-qemu: true
          - file: ./src/adservice/Dockerfile
            tag_suffix: adservice
            context: ./
            setup-qemu: true
          - file: ./src/cartservice/src/Dockerfile
            tag_suffix: cartservice
            context: ./
            setup-qemu: false
          - file: ./src/checkoutservice/Dockerfile
            tag_suffix: checkoutservice
            context: ./
            setup-qemu: true
          - file: ./src/currencyservice/Dockerfile
            tag_suffix: currencyservice
            context: ./
            setup-qemu: true
          - file: ./src/emailservice/Dockerfile
            tag_suffix: emailservice
            context: ./
            setup-qemu: true
          - file: ./src/frauddetectionservice/Dockerfile
            tag_suffix: frauddetectionservice
            context: ./
            setup-qemu: true
          - file: ./src/frontend/Dockerfile
            tag_suffix: frontend
            context: ./
            setup-qemu: true
          - file: ./src/frontendproxy/Dockerfile
            tag_suffix: frontendproxy
            context: ./
            setup-qemu: true
          - file: ./src/frontend/Dockerfile.cypress
            tag_suffix: frontend-tests
            context: ./
            setup-qemu: true
          - file: ./src/imageprovider/Dockerfile
            tag_suffix: imageprovider
            context: ./
            setup-qemu: true
          - file: ./src/kafka/Dockerfile
            tag_suffix: kafka
            context: ./
            setup-qemu: true
          - file: ./src/loadgenerator/Dockerfile
            tag_suffix: loadgenerator
            context: ./
            setup-qemu: true
          - file: ./src/paymentservice/Dockerfile
            tag_suffix: paymentservice
            context: ./
            setup-qemu: true
          - file: ./src/productcatalogservice/Dockerfile
            tag_suffix: productcatalogservice
            context: ./
            setup-qemu: true
          - file: ./src/quoteservice/Dockerfile
            tag_suffix: quoteservice
            context: ./
            setup-qemu: true
          - file: ./src/recommendationservice/Dockerfile
            tag_suffix: recommendationservice
            context: ./
            setup-qemu: true
          - file: ./src/shippingservice/Dockerfile
            tag_suffix: shippingservice
            context: ./
            setup-qemu: true
          - file: ./src/flagd-ui/Dockerfile
            tag_suffix: flagdui
            context: ./
            setup-qemu: true
          - file: ./test/tracetesting/Dockerfile
            tag_suffix: traceBasedTests
            context: ./
            setup-qemu: true

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Load environment variables from .env file
        run: |
          if [ -f .env ]; then
            # Filter out comments and empty lines, then add each variable to $GITHUB_ENV
            grep -vE '^\s*#|^\s*$' .env | while read -r line; do
              echo "$line" >> $GITHUB_ENV
            done
          else
            echo ".env file not found!"
            exit 1
          fi
      - name: Check for changes and set push options
        id: check_changes
        run: |
          DOCKERFILE_DIR=$(dirname ${{ matrix.file_tag.file }})
          FILES_CHANGED=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} -- $DOCKERFILE_DIR)
          if [ -z "$FILES_CHANGED" ]; then
            echo "No changes in ${{ matrix.file_tag.context }}, skipping build."
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "Changes detected in ${{ matrix.file_tag.context }}, proceeding with build."
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: true
      - name: Log in to Docker Hub  
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: true
      - name: Log in to Docker Hub2  
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: true        
      - name: Set up QEMU
        if: ${{ matrix.file_tag.setup-qemu }}
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Matrix Build and push demo images
        if: true
        uses: docker/build-push-action@v6.10.0
        with:
          context: ${{ matrix.file_tag.context }}
          file: ${{ matrix.file_tag.file }}
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            OTEL_JAVA_AGENT_VERSION=2.9.0
            OPENTELEMETRY_CPP_VERSION=1.17.0
            TRACETEST_IMAGE_VERSION=v1.7.1
          tags: |
            youweizeng/otel:dev-${{matrix.file_tag.tag_suffix }}
            youweizeng/otel:latest-${{matrix.file_tag.tag_suffix }}
          cache-from: type=gha
          cache-to: type=gha
